// Generated by CoffeeScript 1.9.3
(function() {
  "use strict";
  var Blueprint, _;

  _ = require('lodash');

  Blueprint = {
    make_type: {},
    export_attributes: [],
    cache: {},
    create: function() {
      var bp;
      bp = Object.create(this);
      bp.cache = {};
      return bp;
    },
    extend: function(body) {
      var bp;
      bp = this.create();
      _.assign(bp, body);
      return bp;
    },
    get: function(name) {
      var value;
      if (name in this.cache) {
        return this.cache[name];
      }
      value = this[name];
      if (_.isFunction(value)) {
        value = value.apply(this);
      }
      this.cache[name] = value;
      return value;
    },
    "export": function(overrides) {
      var bp, i, len, name, ref, result;
      if (overrides === void 0 || _.isEmpty(overrides)) {
        bp = this;
      } else {
        bp = this.extend(overrides);
      }
      if (_.isFunction(bp.make_type)) {
        result = bp.make_type();
      } else {
        result = Object.create(bp.make_type);
      }
      ref = bp.export_attributes;
      for (i = 0, len = ref.length; i < len; i++) {
        name = ref[i];
        result[name] = bp.get(name);
      }
      return result;
    },
    generate: function(overrides) {
      var bp;
      bp = this.create();
      return bp["export"]();
    }
  };

  module.exports = Blueprint;

}).call(this);
