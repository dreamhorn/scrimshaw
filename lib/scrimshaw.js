// Generated by CoffeeScript 1.9.3
(function() {
  "use strict";
  var Scrimshaw, _;

  _ = require('lodash');

  Scrimshaw = {
    make_type: {},
    export_attributes: [],
    cache: {},
    create: function() {
      var scsh;
      scsh = Object.create(this);
      scsh.cache = {};
      return scsh;
    },
    extend: function(body) {
      var scsh;
      scsh = this.create();
      _.assign(scsh, body);
      return scsh;
    },
    get: function(name) {
      var value;
      if (name in this.cache) {
        return this.cache[name];
      }
      value = this[name];
      if (_.isFunction(value)) {
        value = value.apply(this);
      }
      this.cache[name] = value;
      return value;
    },
    "export": function(overrides) {
      var i, len, name, ref, result, scsh;
      if (overrides === void 0 || _.isEmpty(overrides)) {
        scsh = this;
      } else {
        scsh = this.extend(overrides);
      }
      if (_.isFunction(scsh.make_type)) {
        result = scsh.make_type();
      } else {
        result = Object.create(scsh.make_type);
      }
      ref = scsh.export_attributes;
      for (i = 0, len = ref.length; i < len; i++) {
        name = ref[i];
        result[name] = scsh.get(name);
      }
      return result;
    },
    generate: function(overrides) {
      var scsh;
      scsh = this.create();
      return scsh["export"](overrides);
    }
  };

  module.exports = Scrimshaw;

}).call(this);
